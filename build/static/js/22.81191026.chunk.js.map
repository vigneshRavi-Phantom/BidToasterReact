{"version":3,"sources":["assets/img/logo.png","components/toaster/Alert.tsx","components/toaster/useTimeout.ts","components/toaster/Message.tsx","components/toaster/ToastManager.tsx","components/toaster/Toast.tsx","components/toaster/index.ts","containers/Admin/AdminNavbar.tsx","containers/Admin/Sidebar.tsx","containers/Layout/Layout.tsx","containers/Admin/SimpleHeader.tsx","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","pages/Profile.tsx"],"names":["Close","onClose","className","type","aria-label","onClick","aria-hidden","Alert","id","title","useTimeout","callback","delay","savedCallback","React","current","setTimeout","clearTimeout","Message","message","position","onRequestRemove","requestClose","duration","container","timeout","localShow","setLocalShow","isFromTop","close","animation","config","mass","tension","friction","from","opacity","height","transform","enter","next","getBoundingClientRect","leave","onRest","transition","useTransition","style","display","flexDirection","alignItems","includes","getStyle","onMouseEnter","onMouseLeave","props","item","div","pointerEvents","ref","defaultState","top","bottom","ToastManager","state","notify","options","toast","createToastState","isTop","setState","prev","closeAll","Object","keys","forEach","pos","p","closeToast","idCounter","hasOwnProperty","showing","removeToast","String","map","filter","maxWidth","zIndex","margin","textAlign","right","left","this","thisPosition","toasts","key","isBrowser","window","document","PORTAL_ID","toaster","createNotification","removeAll","bindNotify","fn","portalElement","existingPortalElement","getElementById","el","createElement","body","appendChild","ReactDOM","AdminNavbar","theme","sidenavOpen","toggleSidenav","logout","useAuth","navigate","useNavigate","Navbar","classnames","Container","fluid","Collapse","navbar","isOpen","Nav","NavItem","active","NavLink","UncontrolledDropdown","nav","DropdownToggle","color","tag","DropdownMenu","Row","Col","href","e","preventDefault","xs","Media","DropdownItem","header","divider","defaultProps","brandText","Sidebar","routes","logo","rtlActive","useState","location","useLocation","useEffect","getCollapseStates","navbarBrandProps","initialState","prop","collapse","getCollapseInitialState","views","i","length","pathname","indexOf","path","closeSidenav","innerWidth","innerLink","to","Link","outterLink","target","scrollBarInner","NavbarBrand","alt","imgAlt","src","imgSrc","createLinks","redirect","st","data-toggle","aria-expanded","icon","name","miniName","routeName","layout","NavLinkRRD","undefined","classList","contains","add","remove","OrgRoutes","VendorRoutes","BuyerRoutes","Layout","setSidenavOpen","setRoutes","accountProfile","userAccessType","reload","require","default","getBrandText","children","TimelineHeader","parentName","lg","listClassName","aria-current","propTypes","PropTypes","node","row","bool","check","inline","disabled","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","innerRef","oneOfType","func","CardBody","listTag","Breadcrumb","ListTag","label","listClasses","BreadcrumbItem","ProfileForm","lazy","Profile","useModal","isModal","openModal","refetchAccountProfile","inputResponse","resType","size","firstName","lastName","email","phoneNumber","output","getUserAccessType"],"mappings":"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","file":"static/js/22.81191026.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.345caade.png\";","import * as React from \"react\";\nimport { MessageType } from \"./Message\";\n\ninterface Props {\n  id: string;\n  title: React.ReactNode | string;\n  onClose: () => void;\n  type?: MessageType;\n}\n\nconst Alert = ({ id, title, onClose, type }: Props) => {\n  return (\n    <div id={id} className=\"Toaster__alert\">\n      {typeof title === \"string\" ? (\n        <div className={`Toaster__alert_text ${type === 'error' ? 'danger' : type}`}>{title}</div>\n      ) : (\n        title\n      )}\n\n      {onClose && <Close onClose={onClose} />}\n    </div>\n  );\n};\n\nconst Close = ({ onClose }: { onClose: () => void }) => (\n  <button\n    className=\"Toaster__alert_close\"\n    type=\"button\"\n    aria-label=\"Close\"\n    onClick={onClose}\n  >\n    <span aria-hidden=\"true\">×</span>\n  </button>\n);\n\nexport default Alert;","import * as React from \"react\";\n\ntype Callback = () => void;\n\nexport function useTimeout(callback: Callback, delay: number | null) {\n  const savedCallback = React.useRef<Callback | null>();\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      if (savedCallback.current) {\n        savedCallback.current();\n      }\n    }\n    if (delay !== null) {\n      let id = setTimeout(tick, delay);\n      return () => clearTimeout(id);\n    }\n  }, [delay]);\n}","import * as React from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport ReachAlert from \"@reach/alert\";\nimport Alert from \"./Alert\";\nimport { useTimeout } from \"./useTimeout\";\nimport POSITIONS from \"./Positions\";\n\ninterface MessageCallback {\n  id: string;\n  onClose: () => void;\n}\n\nexport type MessageType = \"default\" | \"success\" | \"error\";\n\nexport type PositionsType = keyof typeof POSITIONS;\n\nconst getStyle = (position: PositionsType) => {\n  let style = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  } as React.CSSProperties;\n\n  if (position.includes(\"right\")) {\n    style.alignItems = \"flex-end\";\n  } else if (position.includes(\"left\")) {\n    style.alignItems = \"flex-start\";\n  }\n\n  return style;\n};\n\nexport type MessageProp =\n  | React.ReactNode\n  | ((callback: MessageCallback) => React.ReactNode)\n  | string;\n\nexport interface MessageOptions {\n  id: string;\n  duration: number | null;\n  type: MessageType;\n  onRequestRemove: () => void;\n  onRequestClose: () => void;\n  showing: boolean;\n  position: PositionsType;\n}\n\ninterface Props extends MessageOptions {\n  message: MessageProp;\n  zIndex?: number;\n  requestClose?: boolean;\n  position: PositionsType;\n}\n\nexport const Message = ({\n  id,\n  message,\n  position,\n  onRequestRemove,\n  requestClose = false,\n  duration = 30000,\n  type\n}: Props) => {\n  const container = React.useRef<HTMLDivElement | null>(null);\n  const [timeout, setTimeout] = React.useState(duration);\n  const [localShow, setLocalShow] = React.useState(true);\n\n  const isFromTop =\n    position === \"top-left\" || position === \"top-right\" || position === \"top\";\n\n  useTimeout(close, timeout);\n\n  const animation = {\n    config: { mass: 1, tension: 185, friction: 26 },\n    from: {\n      opacity: 1,\n      height: 0,\n      transform: `translateY(${isFromTop ? \"-100%\" : 0}) scale(1)`\n    },\n    enter: () => (next: any) =>\n      next({\n        opacity: 1,\n        height: container.current!.getBoundingClientRect().height,\n        transform: `translateY(0) scale(1)`\n      }),\n    leave: {\n      opacity: 0,\n      height: 0,\n      transform: `translateY(0 scale(0.9)`\n    },\n    onRest\n  } as any;\n\n  const transition = useTransition(localShow, animation);\n  const style = React.useMemo(() => getStyle(position), [position]);\n\n  function onMouseEnter() {\n    setTimeout(null);\n  }\n\n  function onMouseLeave() {\n    setTimeout(duration);\n  }\n\n  function onRest() {\n    if (!localShow) {\n      onRequestRemove();\n    }\n  }\n\n  function close() {\n    setLocalShow(false);\n  }\n\n  React.useEffect(() => {\n    if (requestClose) {\n      setLocalShow(false);\n    }\n  }, [requestClose]);\n\n  function renderMessage() {\n    if (typeof message === \"string\" || React.isValidElement(message)) {\n      return <Alert id={id} title={message} type={type} onClose={close} />;\n    }\n\n    if (typeof message === \"function\") {\n      return message({\n        id,\n        onClose: close\n      });\n    }\n\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      {transition(\n        ( props, item ) =>\n          item && (\n            <animated.div\n              key={'1'}\n              className=\"Toaster__message\"\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              style={{\n                opacity: props.opacity,\n                height: props.height,\n                ...style\n              }}\n            >\n              <animated.div\n                style={{\n                  transform: props.transform,\n                  pointerEvents: \"auto\"\n                }}\n                ref={container}\n                className=\"Toaster__message-wrapper\"\n              >\n                <ReachAlert>{renderMessage()}</ReachAlert>\n              </animated.div>\n            </animated.div>\n          )\n      )}\n    </React.Fragment>\n  );\n};","import * as React from \"react\";\nimport {\n  Message,\n  PositionsType,\n  MessageType,\n  MessageOptions,\n  MessageProp\n} from \"./Message\";\n\ninterface Props {\n  notify: (fn: Function, closeAll: Function, close: Function) => void;\n}\n\nexport interface MessageOptionalOptions {\n  type?: MessageType;\n  duration?: number | null;\n  position?: PositionsType;\n}\n\ninterface ToastArgs extends MessageOptions {\n  message: MessageProp;\n}\n\ntype State = {\n  top: Array<ToastArgs>;\n  \"top-left\": Array<ToastArgs>;\n  \"top-right\": Array<ToastArgs>;\n  \"bottom-left\": Array<ToastArgs>;\n  bottom: Array<ToastArgs>;\n  \"bottom-right\": Array<ToastArgs>;\n};\n\nconst defaultState: State = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": []\n};\n\nexport default class ToastManager extends React.Component<Props, State> {\n  static idCounter = 0;\n\n  state: State = defaultState;\n\n  constructor(props: Props) {\n    super(props);\n    props.notify(this.notify, this.closeAll, this.closeToast);\n  }\n\n  notify = (message: MessageProp, options: MessageOptionalOptions) => {\n    const toast = this.createToastState(message, options);\n    const { position } = toast;\n\n    // prepend the toast for toasts positioned at the top of\n    // the screen, otherwise append it.\n    const isTop = position.includes(\"top\");\n\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: isTop\n          ? [toast, ...prev[position]]\n          : [...prev[position], toast]\n      };\n    });\n    return { id: toast.id, position: toast.position };\n  };\n\n  closeAll = () => {\n    Object.keys(this.state).forEach(pos => {\n      const p = pos as keyof State;\n      const position = this.state[p];\n      position.forEach((toast: any) => {\n        this.closeToast(toast.id, p);\n      });\n    });\n  };\n\n  createToastState = (\n    message: MessageProp,\n    options: MessageOptionalOptions\n  ) => {\n    const id = ++ToastManager.idCounter;\n\n    // a bit messy, but object.position returns a number because\n    // it's a method argument.\n    const position =\n      options.hasOwnProperty(\"position\") && typeof options.position === \"string\"\n        ? options.position\n        : \"top\";\n\n    return {\n      id,\n      message,\n      position,\n      showing: true,\n      duration:\n        typeof options.duration === \"undefined\" ? 5000 : options.duration,\n      onRequestRemove: () => this.removeToast(String(id), position),\n      type: options.type\n    };\n  };\n\n  closeToast = (id: string, position: PositionsType) => {\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: prev[position].map(toast => {\n          if (toast.id !== id) return toast;\n          return {\n            ...toast,\n            requestClose: true\n          };\n        })\n      };\n    });\n  };\n\n  // actually fully remove the toast\n  removeToast = (id: string, position: PositionsType) => {\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: prev[position].filter(toast => toast.id !== id)\n      };\n    });\n  };\n\n  getStyle = (position: PositionsType) => {\n    let style: React.CSSProperties = {\n      maxWidth: \"560px\",\n      position: \"fixed\",\n      zIndex: 5500,\n      pointerEvents: \"none\"\n    };\n\n    if (position === \"top\" || position === \"bottom\") {\n      style.margin = \"0 auto\";\n      style.textAlign = \"center\";\n    }\n\n    if (position.includes(\"top\")) {\n      style.top = 0;\n    }\n\n    if (position.includes(\"bottom\")) {\n      style.bottom = 0;\n    }\n\n    if (!position.includes(\"left\")) {\n      style.right = 0;\n    }\n\n    if (!position.includes(\"right\")) {\n      style.left = 0;\n    }\n\n    return style;\n  };\n\n  render() {\n    return Object.keys(this.state).map(thisPosition => {\n      const pos = thisPosition as keyof State;\n      const toasts = this.state[pos];\n      return (\n        <span\n          key={thisPosition}\n          className={\"Toaster__manager-\" + pos}\n          style={this.getStyle(pos)}\n        >\n          {toasts.map((toast: ToastArgs) => {\n            return <Message {...toast} position={pos} key={toast.id} />;\n          })}\n        </span>\n      );\n    });\n  }\n}","import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager, { MessageOptionalOptions } from \"./ToastManager\";\nimport { MessageProp, PositionsType } from \"./Message\";\n\nconst isBrowser =\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\n\nclass Toaster {\n  createNotification?: Function;\n  removeAll?: Function;\n  closeToast?: Function;\n\n  constructor() {\n    if (!isBrowser) {\n      return;\n    }\n\n    let portalElement;\n    const existingPortalElement = document.getElementById(PORTAL_ID);\n\n    if (existingPortalElement) {\n      portalElement = existingPortalElement;\n    } else {\n      const el = document.createElement(\"div\");\n      el.id = PORTAL_ID;\n      el.className = \"Toaster\";\n      if (document.body != null) {\n        document.body.appendChild(el);\n      }\n      portalElement = el;\n    }\n\n    ReactDOM.render(\n      <ToastManager notify={this.bindNotify as any} />,\n      portalElement\n    );\n  }\n\n  closeAll = () => {\n    if (this.removeAll) {\n      this.removeAll();\n    }\n  };\n\n  bindNotify = (fn: Function, removeAll: Function, closeToast: Function) => {\n    this.createNotification = fn;\n    this.removeAll = removeAll;\n    this.closeToast = closeToast;\n  };\n\n  notify = (message: MessageProp, options: MessageOptionalOptions = {}) => {\n    if (this.createNotification) {\n      return this.createNotification(message, options);\n    }\n  };\n\n  close = (id: number, position: PositionsType) => {\n    if(this.closeToast){\n      this.closeToast(id, position);\n    }\n  }\n}\n\nexport default Toaster;","import Toaster from \"./Toast\";\n\nconst toaster = new Toaster();\n\nexport { default as Position } from \"./Positions\";\n\nexport default toaster;","import classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { useAuth } from \"contexts/AuthContextProvider\";\n\nfunction AdminNavbar({ theme, sidenavOpen, toggleSidenav }: any) {\n  const { logout } = useAuth();\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Navbar\n        className={classnames(\n          \"navbar-top navbar-expand border-bottom\",\n          { \"navbar-dark bg-info\": theme === \"dark\" },\n          { \"navbar-light bg-info\": theme === \"light\" }\n        )}\n      >\n        <Container fluid>\n          <Collapse navbar isOpen={true}>\n            <Nav className=\"align-items-center ml-md-auto\" navbar>\n              <NavItem className=\"d-xl-none\">\n                <div\n                  className={classnames(\n                    \"pr-3 sidenav-toggler\",\n                    { active: sidenavOpen },\n                    { \"sidenav-toggler-dark\": theme === \"dark\" }\n                  )}\n                  onClick={toggleSidenav}\n                >\n                  <div className=\"sidenav-toggler-inner\">\n                    <i className=\"sidenav-toggler-line\" />\n                    <i className=\"sidenav-toggler-line\" />\n                    <i className=\"sidenav-toggler-line\" />\n                  </div>\n                </div>\n              </NavItem>\n              <NavItem className=\"d-sm-none\">\n                <NavLink>\n                  <i className=\"ni ni-zoom-split-in\" />\n                </NavLink>\n              </NavItem>\n              {/* <UncontrolledDropdown nav>\n                <DropdownToggle className=\"nav-link\" color=\"\" tag=\"a\">\n                  <i className=\"ni ni-bell-55\" />\n                </DropdownToggle>\n                <DropdownMenu\n                  className=\"dropdown-menu-xl py-0 overflow-hidden\"\n                  right\n                >\n                  <div className=\"px-3 py-3\">\n                    <h6 className=\"text-sm text-muted m-0\">\n                      You have <strong className=\"text-info\">13</strong>{\" \"}\n                      notifications.\n                    </h6>\n                  </div>\n\n                  <ListGroup flush>\n                    <ListGroupItem\n                      className=\"list-group-item-action\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      tag=\"a\"\n                    >\n                      <Row className=\"align-items-center\">\n                        <Col className=\"col-auto\">\n                          <i className=\"ni ni-single-02\" />\n                        </Col>\n                        <div className=\"col ml--2\">\n                          <div className=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                              <h4 className=\"mb-0 text-sm\">My Account</h4>\n                            </div>\n                            <div className=\"text-right text-muted\">\n                              <small>2 hrs ago</small>\n                            </div>\n                          </div>\n                          <p className=\"text-sm mb-0\">\n                            Let's meet at Starbucks at 11:30. Wdyt?\n                          </p>\n                        </div>\n                      </Row>\n                    </ListGroupItem>\n                    <ListGroupItem\n                      className=\"list-group-item-action\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      tag=\"a\"\n                    >\n                      <Row className=\"align-items-center\">\n                        <Col className=\"col-auto\">\n                          <i className=\"ni ni-single-02\" />\n                        </Col>\n                        <div className=\"col ml--2\">\n                          <div className=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                              <h4 className=\"mb-0 text-sm\">My Account</h4>\n                            </div>\n                            <div className=\"text-right text-muted\">\n                              <small>3 hrs ago</small>\n                            </div>\n                          </div>\n                          <p className=\"text-sm mb-0\">\n                            A new issue has been reported for Argon.\n                          </p>\n                        </div>\n                      </Row>\n                    </ListGroupItem>\n                    <ListGroupItem\n                      className=\"list-group-item-action\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      tag=\"a\"\n                    >\n                      <Row className=\"align-items-center\">\n                        <Col className=\"col-auto\">\n                          <i className=\"ni ni-single-02\" />\n                        </Col>\n                        <div className=\"col ml--2\">\n                          <div className=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                              <h4 className=\"mb-0 text-sm\">My Account</h4>\n                            </div>\n                            <div className=\"text-right text-muted\">\n                              <small>5 hrs ago</small>\n                            </div>\n                          </div>\n                          <p className=\"text-sm mb-0\">\n                            Your posts have been liked a lot.\n                          </p>\n                        </div>\n                      </Row>\n                    </ListGroupItem>\n                    <ListGroupItem\n                      className=\"list-group-item-action\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      tag=\"a\"\n                    >\n                      <Row className=\"align-items-center\">\n                        <Col className=\"col-auto\">\n                          <i className=\"ni ni-single-02\" />\n                        </Col>\n                        <div className=\"col ml--2\">\n                          <div className=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                              <h4 className=\"mb-0 text-sm\">My Account</h4>\n                            </div>\n                            <div className=\"text-right text-muted\">\n                              <small>2 hrs ago</small>\n                            </div>\n                          </div>\n                          <p className=\"text-sm mb-0\">\n                            Let's meet at Starbucks at 11:30. Wdyt?\n                          </p>\n                        </div>\n                      </Row>\n                    </ListGroupItem>\n                    <ListGroupItem\n                      className=\"list-group-item-action\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      tag=\"a\"\n                    >\n                      <Row className=\"align-items-center\">\n                        <Col className=\"col-auto\">\n                          <i className=\"ni ni-single-02\" />\n                        </Col>\n                        <div className=\"col ml--2\">\n                          <div className=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                              <h4 className=\"mb-0 text-sm\">My Account</h4>\n                            </div>\n                            <div className=\"text-right text-muted\">\n                              <small>3 hrs ago</small>\n                            </div>\n                          </div>\n                          <p className=\"text-sm mb-0\">\n                            A new issue has been reported for Argon.\n                          </p>\n                        </div>\n                      </Row>\n                    </ListGroupItem>\n                  </ListGroup>\n\n                  <DropdownItem\n                    className=\"text-center text-info font-weight-bold py-3\"\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    View all\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown> */}\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"nav-link\" color=\"\" tag=\"a\">\n                  <i className=\"ni ni-ungroup\" />\n                </DropdownToggle>\n                <DropdownMenu\n                  className=\"dropdown-menu-lg dropdown-menu-dark bg-default\"\n                  right\n                >\n                  <Row className=\"shortcuts px-4\">\n                    <Col\n                      className=\"shortcut-item\"\n                      href=\"#pablo\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        navigate(\"/dashboard\");\n                      }}\n                      xs=\"4\"\n                      tag=\"a\"\n                    >\n                      <span className=\"shortcut-media avatar rounded-circle bg-gradient-red\">\n                        <i className=\"ni ni-shop\" />\n                      </span>\n                      <small>Dashboard</small>\n                    </Col>\n                    <Col\n                      className=\"shortcut-item\"\n                      href=\"#pablo\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        navigate(\"/users\");\n                      }}\n                      xs=\"4\"\n                      tag=\"a\"\n                    >\n                      <span className=\"shortcut-media avatar rounded-circle bg-gradient-orange\">\n                        <i className=\"ni ni-single-02\" />\n                      </span>\n                      <small>Users</small>\n                    </Col>\n                    <Col\n                      className=\"shortcut-item\"\n                      href=\"#pablo\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        navigate(\"/org-items\");\n                      }}\n                      xs=\"4\"\n                      tag=\"a\"\n                    >\n                      <span className=\"shortcut-media avatar rounded-circle bg-gradient-info\">\n                        <i className=\"ni ni-credit-card\" />\n                      </span>\n                      <small>Items</small>\n                    </Col>\n                    <Col\n                      className=\"shortcut-item\"\n                      href=\"#pablo\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        navigate(\"/dashboard\");\n                      }}\n                      xs=\"4\"\n                      tag=\"a\"\n                    >\n                      <span className=\"shortcut-media avatar rounded-circle bg-gradient-green\">\n                        <i className=\"ni ni-books\" />\n                      </span>\n                      <small>Reports</small>\n                    </Col>\n                    <Col\n                      className=\"shortcut-item\"\n                      href=\"#pablo\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        navigate(\"/settings/reset-password\");\n                      }}\n                      xs=\"4\"\n                      tag=\"a\"\n                    >\n                      <span className=\"shortcut-media avatar rounded-circle bg-gradient-purple\">\n                        <i className=\"ni ni-settings-gear-65\" />\n                      </span>\n                      <small>Settings</small>\n                    </Col>\n                    <Col\n                      className=\"shortcut-item\"\n                      href=\"#pablo\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        navigate(\"/profile\");\n                      }}\n                      xs=\"4\"\n                      tag=\"a\"\n                    >\n                      <span className=\"shortcut-media avatar rounded-circle bg-gradient-yellow\">\n                        <i className=\"ni ni-single-02\" />\n                      </span>\n                      <small>Profile</small>\n                    </Col>\n                  </Row>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n            <Nav className=\"align-items-center ml-auto ml-md-0\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"nav-link pr-0\" color=\"\" tag=\"a\">\n                  <Media className=\"align-items-center\">\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <i className=\"ni ni-single-02\" />{\" \"}\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        My Account\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  <DropdownItem\n                    href=\"#pablo\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      navigate(\"/profile\");\n                    }}\n                  >\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    href=\"#pablo\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      navigate(\"/settings/reset-password\");\n                    }}\n                  >\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href=\"#pablo\" onClick={logout}>\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nAdminNavbar.defaultProps = {\n  toggleSidenav: () => {},\n  sidenavOpen: false,\n  theme: \"dark\",\n  brandText: \"\",\n};\nAdminNavbar.propTypes = {\n  toggleSidenav: PropTypes.func,\n  sidenavOpen: PropTypes.bool,\n  theme: PropTypes.oneOf([\"dark\", \"light\"]),\n  brandText: PropTypes.string,\n};\n\nexport default AdminNavbar;\n","import React from \"react\";\nimport { useLocation, NavLink as NavLinkRRD, Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport {\n  Collapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n} from \"reactstrap\";\n\nfunction Sidebar({ toggleSidenav, sidenavOpen, routes, logo, rtlActive }: any) {\n  const [state, setState] = React.useState<any>({});\n  const location = useLocation();\n  React.useEffect(() => {\n    setState(getCollapseStates(routes));\n    // eslint-disable-next-line\n  }, []);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName: string) => {\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // makes the sidenav normal on hover (actually when mouse enters on it)\n  const onMouseEnterSidenav = () => {\n    if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\n      document.body.classList.add(\"g-sidenav-show\");\n    }\n  };\n  // makes the sidenav mini on hover (actually when mouse leaves from it)\n  const onMouseLeaveSidenav = () => {\n    if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\n      document.body.classList.remove(\"g-sidenav-show\");\n    }\n  };\n  // this creates the intial state of this component based on the collapse routes\n  // that it gets through routes\n  const getCollapseStates = (routes: any[]) => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = {\n          [prop.state]: getCollapseInitialState(prop.views),\n          ...getCollapseStates(prop.views),\n          ...initialState,\n        };\n      }\n      return null;\n    });\n    return initialState;\n  };\n  // this verifies if any of the collapses should be default opened on a rerender of this component\n  // for example, on the refresh of the page,\n  // while on the src/views/forms/RegularForms.js - route /admin/regular-forms\n  const getCollapseInitialState = (routes: any[]) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (location.pathname.indexOf(routes[i].path) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n  // this is used on mobile devices, when a user navigates\n  // the sidebar will autoclose\n  const closeSidenav = () => {\n    if (window.innerWidth < 1200) {\n      toggleSidenav();\n    }\n  };\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  const createLinks = (routes: any[]) => {\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.collapse) {\n        var st: any = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <NavItem key={key}>\n            <NavLink\n              href=\"#pablo\"\n              data-toggle=\"collapse\"\n              aria-expanded={state[prop.state]}\n              className={classnames({\n                active: getCollapseInitialState(prop.views),\n              })}\n              onClick={(e) => {\n                e.preventDefault();\n                setState(st);\n              }}\n            >\n              {prop.icon ? (\n                <>\n                  <i className={prop.icon} />\n                  <span className=\"nav-link-text\">{prop.name}</span>\n                </>\n              ) : prop.miniName ? (\n                <>\n                  <span className=\"sidenav-mini-icon\"> {prop.miniName} </span>\n                  <span className=\"sidenav-normal\"> {prop.name} </span>\n                </>\n              ) : null}\n            </NavLink>\n            <Collapse isOpen={state[prop.state]}>\n              <Nav className=\"nav-sm flex-column\">\n                {createLinks(prop.views)}\n              </Nav>\n            </Collapse>\n          </NavItem>\n        );\n      }\n      return (\n        <NavItem className={activeRoute(prop.layout + prop.path)} key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            onClick={closeSidenav}\n            tag={NavLinkRRD}\n          >\n            {prop.icon !== undefined ? (\n              <>\n                <i className={prop.icon} />\n                <span className=\"nav-link-text\">{prop.name}</span>\n              </>\n            ) : prop.miniName !== undefined ? (\n              <>\n                <span className=\"sidenav-mini-icon\"> {prop.miniName} </span>\n                <span className=\"sidenav-normal\"> {prop.name} </span>\n              </>\n            ) : (\n              prop.name\n            )}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link,\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\",\n    };\n  }\n  const scrollBarInner = (\n    <div className=\"scrollbar-inner\">\n      <div className=\"sidenav-header d-flex align-items-center\">\n        {logo ? (\n          <NavbarBrand {...navbarBrandProps}>\n            <img\n              alt={logo.imgAlt}\n              className=\"navbar-brand-img\"\n              src={logo.imgSrc}\n            />\n          </NavbarBrand>\n        ) : null}\n        <div className=\"ml-auto\">\n          <div\n            className={classnames(\"sidenav-toggler d-none d-xl-block\", {\n              active: sidenavOpen,\n            })}\n            onClick={toggleSidenav}\n          >\n            <div className=\"sidenav-toggler-inner\">\n              <i className=\"sidenav-toggler-line\" />\n              <i className=\"sidenav-toggler-line\" />\n              <i className=\"sidenav-toggler-line\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"navbar-inner\">\n        <Collapse navbar isOpen={true}>\n          <Nav navbar>{createLinks(routes)}</Nav>\n        </Collapse>\n      </div>\n    </div>\n  );\n  return (\n    <Navbar\n      className={\n        \"sidenav navbar-vertical navbar-expand-xs navbar-light bg-white \" +\n        (rtlActive ? \"\" : \"fixed-left\")\n      }\n      onMouseEnter={onMouseEnterSidenav}\n      onMouseLeave={onMouseLeaveSidenav}\n    >\n      {scrollBarInner}\n    </Navbar>\n  );\n}\n\nSidebar.defaultProps = {\n  routes: [{}],\n  toggleSidenav: () => {},\n  sidenavOpen: false,\n  rtlActive: false,\n};\n\nSidebar.propTypes = {\n  // function used to make sidenav mini or normal\n  toggleSidenav: PropTypes.func,\n  // prop to know if the sidenav is mini or normal\n  sidenavOpen: PropTypes.bool,\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  // logo\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n  // rtl active, this will make the sidebar to stay on the right side\n  rtlActive: PropTypes.bool,\n};\n\nexport default Sidebar;\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport AdminNavbar from \"containers/Admin/AdminNavbar\";\nimport Sidebar from \"containers/Admin/Sidebar\";\nimport { useAuth } from \"contexts/AuthContextProvider\";\n\nconst OrgRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"ni ni-shop text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/org-items\",\n    name: \"Items\",\n    icon: \"ni ni-archive-2 text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-chart-pie-35 text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/org-vendors\",\n    name: \"Vendors\",\n    icon: \"ni ni-chart-pie-35 text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/settings/reset-password\",\n    name: \"Settings\",\n    icon: \"ni ni-calendar-grid-58 text-primary\",\n    layout: \"\",\n  },\n];\nconst VendorRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"ni ni-shop text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/rfq\",\n    name: \"RFQ\",\n    icon: \"ni ni-app text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/settings/reset-password\",\n    name: \"Settings\",\n    icon: \"ni ni-calendar-grid-58 text-primary\",\n    layout: \"\",\n  },\n];\nconst BuyerRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"ni ni-shop text-primary\",\n    layout: \"\",\n  },\n  // {\n  //   collapse: true,\n  //   name: \"Buyer\",\n  //   icon: \"ni ni-align-left-2 text-default\",\n  //   state: \"buyerCollapse\",\n  //   views: [\n  //     {\n  //       path: \"/rfq\",\n  //       name: \"RFQ\",\n  //       miniName: \"T\",\n  //       layout: \"\",\n  //     },\n  //   ],\n  // },\n  {\n    path: \"/org-vendors\",\n    name: \"Vendors\",\n    icon: \"ni ni-chart-pie-35 text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/rfq\",\n    name: \"RFQ\",\n    icon: \"ni ni-app text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/comparison\",\n    name: \"Comparison\",\n    icon: \"ni ni-map-big text-primary\",\n    layout: \"\",\n  },\n  {\n    path: \"/settings/reset-password\",\n    name: \"Settings\",\n    icon: \"ni ni-calendar-grid-58 text-primary\",\n    layout: \"\",\n  },\n];\n\nconst Layout = (props: any) => {\n  const [sidenavOpen, setSidenavOpen] = useState(true);\n  const [routes, setRoutes] = useState<any[]>([]);\n  const location = useLocation();\n  const { accountProfile } = useAuth();\n\n  useEffect(() => {\n    if (accountProfile && accountProfile.id) {\n      if (accountProfile.userAccessType === \"organization\") {\n        setRoutes(OrgRoutes);\n      } else if (accountProfile.userAccessType === \"vendor\") {\n        setRoutes(VendorRoutes);\n      } else if (accountProfile.userAccessType === \"buyer\") {\n        setRoutes(BuyerRoutes);\n      }\n    } else {\n      window.location.reload();\n    }\n  }, [accountProfile]);\n\n  const getBrandText = () => {\n    if (routes.length > 0) {\n      for (let i = 0; i < routes.length; i++) {\n        if (\n          location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return \"Brand\";\n  };\n\n  const toggleSidenav = () => {\n    if (document.body.classList.contains(\"g-sidenav-pinned\")) {\n      document.body.classList.remove(\"g-sidenav-pinned\");\n      document.body.classList.add(\"g-sidenav-hidden\");\n    } else {\n      document.body.classList.add(\"g-sidenav-pinned\");\n      document.body.classList.remove(\"g-sidenav-hidden\");\n    }\n    setSidenavOpen(!sidenavOpen);\n  };\n\n  return (\n    <>\n      <Sidebar\n        routes={routes}\n        toggleSidenav={toggleSidenav}\n        sidenavOpen={sidenavOpen}\n        logo={{\n          innerLink: \"/\",\n          imgSrc: require(\"assets/img/logo.png\").default,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\">\n        <AdminNavbar\n          theme={\"light\"}\n          toggleSidenav={toggleSidenav}\n          sidenavOpen={sidenavOpen}\n          brandText={getBrandText()}\n        />\n        {props.children}\n      </div>\n      {sidenavOpen ? (\n        <div className=\"backdrop d-xl-none\" onClick={toggleSidenav} />\n      ) : null}\n    </>\n  );\n};\n\nexport default Layout;\n","import PropTypes from \"prop-types\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction TimelineHeader({ name, parentName }: any) {\n  return (\n    <>\n      <div className=\"header header-dark bg-info pb-6 content__title content__title--calendar\">\n        <Container fluid>\n          <div className=\"header-body\">\n            <Row className=\"align-items-center py-4\">\n              <Col lg=\"6\" xs=\"7\">\n                <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0\">\n                  {name}\n                </h6>{\" \"}\n                <Breadcrumb\n                  className=\"d-none d-md-inline-block ml-lg-4\"\n                  listClassName=\"breadcrumb-links breadcrumb-dark\"\n                >\n                  <BreadcrumbItem>\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      <i className=\"fas fa-home\" />\n                    </a>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem>\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      {parentName}\n                    </a>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem aria-current=\"page\" className=\"active\">\n                    {name}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nTimelineHeader.propTypes = {\n  name: PropTypes.string,\n  parentName: PropTypes.string,\n};\n\nexport default TimelineHeader;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import { lazy, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Layout from \"containers/Layout/Layout\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  Col,\n  FormGroup,\n  CardBody,\n} from \"reactstrap\";\nimport SimpleHeader from \"containers/Admin/SimpleHeader\";\nimport { useModal } from \"contexts/ModalContextProvider\";\nimport toaster from \"components/toaster\";\nimport { useAuth } from \"contexts/AuthContextProvider\";\nimport Loading from \"components/Loading\";\n\nconst ProfileForm = lazy(() => import(\"containers/Profile/ProfileForm\"));\n\nfunction Profile() {\n  const { isModal, openModal }: any = useModal();\n  const { refetchAccountProfile, accountProfile, userAccessType } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if(userAccessType === \"vendor\") {\n      navigate('/vendor-profile');\n    }\n    // eslint-disable-next-line\n  }, [userAccessType]);\n\n  const inputResponse = (resType: string) => {\n    toaster.notify(\"Profile was updated\", {\n      position: \"top-right\",\n      type: \"success\",\n    });\n    refetchAccountProfile();\n  };\n\n  const getUserAccessType = (type: string) => {\n    let output = \"\";\n    if (type === \"buyer\") {\n      output = \"Buyer\";\n    } else if (type === \"vendor\") {\n      output = \"Vendor\";\n    } else if (type === \"vendor_buyer\") {\n      output = \"Vendor & Buyer\";\n    } else if (type === \"admin\") {\n      output = \"Admin\";\n    } else if (type === \"organization\") {\n      output = \"Organization\";\n    }\n\n    return output;\n  };\n\n  if (!accountProfile) return <Loading />;\n\n  return (\n    <>\n      <Layout>\n        {isModal && <ProfileForm inputResponse={inputResponse} />}\n        <SimpleHeader name=\"Profile\" parentName=\"Admin\" />\n        <Container className=\"mt--6\" fluid>\n          <Row className=\"row-example\">\n            <Col lg=\"10\">\n              <div className=\"card-wrapper\">\n                <Card>\n                  <CardHeader>\n                    <Row>\n                      <Col xs=\"6\">\n                        <h3 className=\"mb-0\">Profile</h3>\n                      </Col>\n                      <Col className=\"text-right\" xs=\"6\">\n                        <Button\n                          className=\"btn-round btn-icon\"\n                          color=\"primary\"\n                          href=\"#pablo\"\n                          id=\"tooltip443412080\"\n                          onClick={() => openModal(accountProfile)}\n                          size=\"sm\"\n                        >\n                          Edit Profile\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                    <Row className=\"row-example\">\n                      <Col lg=\"5\">\n                        <FormGroup>\n                          <label className=\"form-control-label\">\n                            Firrst Name\n                          </label>\n                          <span className=\"error\">\n                            {accountProfile.firstName}\n                          </span>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"5\">\n                        <FormGroup>\n                          <label className=\"form-control-label\">\n                            Last Name\n                          </label>\n                          <span className=\"error\">\n                            {accountProfile.lastName}\n                          </span>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row className=\"row-example\">\n                      <Col lg=\"5\">\n                        <FormGroup>\n                          <label className=\"form-control-label\">Email</label>\n                          <span className=\"error\">{accountProfile.email}</span>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"5\">\n                        <FormGroup>\n                          <label className=\"form-control-label\">\n                            Phone Number\n                          </label>\n                          <span className=\"error\">\n                            {accountProfile.phoneNumber}\n                          </span>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row className=\"row-example\">\n                      <Col lg=\"5\">\n                        <FormGroup>\n                          <label className=\"form-control-label\">Role</label>\n                          <span className=\"error\">\n                            {getUserAccessType(accountProfile.userAccessType)}\n                          </span>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"5\"></Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </Layout>\n    </>\n  );\n}\n\nexport default Profile;\n"],"sourceRoot":""}